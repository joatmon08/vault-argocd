---
apiVersion: redhatcop.redhat.io/v1alpha1
kind: SecretEngineMount
metadata:
  name: mysql
  annotations:
    argocd.argoproj.io/sync-wave: "2"
spec:
  authentication:
    path: kubernetes
    role: vault-admin
    serviceAccount:
      name: vault-admin
  type: database
  path: expense/database
---
apiVersion: redhatcop.redhat.io/v1alpha1
kind: DatabaseSecretEngineConfig
metadata:
  name: mysql
  annotations:
    argocd.argoproj.io/sync-wave: "2"
spec:
  authentication:
    path: kubernetes
    role: vault-admin
    serviceAccount:
      name: vault-admin
  pluginName: mysql-database-plugin
  allowedRoles:
    - expense
  connectionURL: '{{username}}:{{password}}@tcp(expense-db-mysql.expenses:3306)/'
  username: root
  rootCredentials:
    randomSecret:
      name: mysql
  path: expense/database/mysql
---
apiVersion: redhatcop.redhat.io/v1alpha1
kind: DatabaseSecretEngineRole
metadata:
  name: expense
  annotations:
    argocd.argoproj.io/sync-wave: "2"
spec:
  authentication:
    path: kubernetes
    role: vault-admin
    serviceAccount:
      name: vault-admin
  path: expense/database/mysql
  dBName: mysql
  creationStatements:
    - CREATE USER '{{name}}'@'%' IDENTIFIED BY '{{password}}';GRANT ALL PRIVILEGES ON DemoExpenses.expense_item TO '{{name}}'@'%';
---
apiVersion: redhatcop.redhat.io/v1alpha1
kind: Policy
metadata:
  name: expense
  annotations:
    argocd.argoproj.io/sync-wave: "2"
spec:
  authentication:
    path: kubernetes
    role: vault-admin
    serviceAccount:
      name: vault-admin
  policy: |
    path "expense/database/mysql/creds/expense" {
      capabilities = ["read"]
    }
---
apiVersion: redhatcop.redhat.io/v1alpha1
kind: KubernetesAuthEngineRole
metadata:
  name: expense
  annotations:
    argocd.argoproj.io/sync-wave: "2"
spec:
  authentication:
    path: kubernetes
    role: vault-admin
    serviceAccount:
      name: vault-admin
  path: kubernetes
  policies:
    - expense
  targetServiceAccounts:
    - expense
  targetNamespaces:
    targetNamespaces:
      - expenses
